{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SMS Final Final Code K\\\\Frontend\\\\src\\\\sections\\\\payments\\\\stepper\\\\Step2Courses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../../Styles/payment/stepper/Step2Courses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://pineappleai.cloud/api/sms\";\nconst Step2Courses = ({\n  student_no,\n  student_details_id,\n  feesData: propFeesData,\n  onMonthSelect,\n  selectedMonths: propSelectedMonths,\n  onCourseSelect,\n  currentCourse\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [feesData, setFeesData] = useState(propFeesData);\n  const [payments, setPayments] = useState([]);\n  const [selectedMonths, setSelectedMonths] = useState(propSelectedMonths || []);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const monthIndexMap = months.reduce((acc, m, i) => {\n    acc[m] = i;\n    return acc;\n  }, {});\n  const currentMonthIndex = new Date().getMonth();\n  useEffect(() => {\n    const fetchFees = async () => {\n      setLoading(true);\n      setError(null);\n      let effectiveStudentId = student_details_id;\n      if (!effectiveStudentId && student_no) {\n        try {\n          const searchResponse = await axios.get(`${API_BASE_URL}/student/search`, {\n            params: {\n              student_no,\n              _t: Date.now()\n            }\n          });\n          const student = searchResponse.data[0];\n          if (student !== null && student !== void 0 && student.student_details_id) {\n            effectiveStudentId = student.student_details_id;\n          } else {\n            setError('No valid student_details_id found.');\n            setLoading(false);\n            return;\n          }\n        } catch (err) {\n          setError(`Error fetching student: ${err.message}`);\n          setLoading(false);\n          return;\n        }\n      }\n      if (!effectiveStudentId) {\n        setError('Missing student_details_id.');\n        setLoading(false);\n        return;\n      }\n      if (!propFeesData) {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/payment/${effectiveStudentId}`);\n          setFeesData(response.data);\n          setPayments(response.data.payments || []);\n        } catch (err) {\n          var _err$response, _err$response$data;\n          setError(`Error fetching fees: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n        }\n      } else {\n        setPayments(propFeesData.payments || []);\n      }\n      const initialMonths = Array.isArray(propSelectedMonths) ? propSelectedMonths : [];\n      setSelectedMonths(initialMonths);\n      if (onMonthSelect) {\n        console.log('Initial onMonthSelect call with:', initialMonths);\n        onMonthSelect(initialMonths);\n      }\n      setLoading(false);\n    };\n    fetchFees();\n  }, [student_no, student_details_id, propFeesData, onMonthSelect, propSelectedMonths]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 55\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 21\n  }, this);\n  if (!feesData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 25\n  }, this);\n  const {\n    course_fees,\n    total_course_fees,\n    admission_fee,\n    total_fees\n  } = feesData;\n  const paidMonths = payments.map(p => p.split(' ')[0]);\n  const getMonthStatus = month => {\n    const index = monthIndexMap[month];\n    if (paidMonths.includes(month)) return 'paid';\n    if (index <= currentMonthIndex) return 'due';\n    return 'upcoming';\n  };\n  const isMonthClickable = month => !paidMonths.includes(month);\n  const handleMonthClick = month => {\n    if (isMonthClickable(month)) {\n      const newSelectedMonths = selectedMonths.includes(month) ? selectedMonths.filter(m => m !== month) : [...selectedMonths, month];\n      setSelectedMonths(newSelectedMonths);\n      if (onMonthSelect) {\n        console.log('Calling onMonthSelect with:', newSelectedMonths);\n        onMonthSelect(newSelectedMonths);\n      }\n      if (onCourseSelect) {\n        onCourseSelect(currentCourse); // Maintain course selection\n      }\n    }\n  };\n  const feeRows = selectedMonths.length > 0 ? selectedMonths.flatMap(month => course_fees !== null && course_fees !== void 0 && course_fees[month] ? Object.entries(course_fees[month]).flatMap(([grade, courses]) => Object.entries(courses).map(([courseName, fee]) => ({\n    month,\n    courseName: courseName.charAt(0).toUpperCase() + courseName.slice(1),\n    grade: grade.replace('Grade ', ''),\n    fee\n  }))) : []) : [];\n  const totalCourseFeesForSelected = feeRows.reduce((sum, row) => sum + row.fee, 0);\n  const totalWithAdmission = totalCourseFeesForSelected + (admission_fee || 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courses-fees-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Courses & Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"period-selector-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"year-dropdown\",\n            defaultValue: new Date().getFullYear(),\n            onChange: e => onCourseSelect === null || onCourseSelect === void 0 ? void 0 : onCourseSelect(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Violin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Piano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Guitar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-item paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-item due\",\n              children: \"Due\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-item upcoming\",\n              children: \"Upcoming\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-grid\",\n          children: months.map(month => {\n            const status = getMonthStatus(month);\n            const isClickable = isMonthClickable(month);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `month-btn ${selectedMonths.includes(month) ? 'selected' : ''} ${status}`,\n              onClick: () => handleMonthClick(month),\n              disabled: !isClickable,\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"fees-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fees (Rs)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: feeRows.length > 0 ? feeRows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.courseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.fee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"Select months to view fee details.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Payment Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalCourseFeesForSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Admission Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: admission_fee || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-row total\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalWithAdmission\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Step2Courses, \"sJPwfRuH0o+tim+yYHLFxbmmj90=\");\n_c = Step2Courses;\nexport default Step2Courses;\nvar _c;\n$RefreshReg$(_c, \"Step2Courses\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","Step2Courses","student_no","student_details_id","feesData","propFeesData","onMonthSelect","selectedMonths","propSelectedMonths","onCourseSelect","currentCourse","_s","loading","setLoading","error","setError","setFeesData","payments","setPayments","setSelectedMonths","months","monthIndexMap","reduce","acc","m","i","currentMonthIndex","Date","getMonth","fetchFees","effectiveStudentId","searchResponse","get","params","_t","now","student","data","err","message","response","_err$response","_err$response$data","initialMonths","Array","isArray","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","course_fees","total_course_fees","admission_fee","total_fees","paidMonths","map","p","split","getMonthStatus","month","index","includes","isMonthClickable","handleMonthClick","newSelectedMonths","filter","feeRows","length","flatMap","Object","entries","grade","courses","courseName","fee","charAt","toUpperCase","slice","replace","totalCourseFeesForSelected","sum","row","totalWithAdmission","defaultValue","getFullYear","onChange","e","target","value","status","isClickable","onClick","disabled","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SMS Final Final Code K/Frontend/src/sections/payments/stepper/Step2Courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Styles/payment/stepper/Step2Courses.css';\r\n\r\nconst API_BASE_URL = \"https://pineappleai.cloud/api/sms\";\r\n\r\nconst Step2Courses = ({ student_no, student_details_id, feesData: propFeesData, onMonthSelect, selectedMonths: propSelectedMonths, onCourseSelect, currentCourse }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [feesData, setFeesData] = useState(propFeesData);\r\n  const [payments, setPayments] = useState([]);\r\n  const [selectedMonths, setSelectedMonths] = useState(propSelectedMonths || []);\r\n\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const monthIndexMap = months.reduce((acc, m, i) => { acc[m] = i; return acc; }, {});\r\n  const currentMonthIndex = new Date().getMonth();\r\n\r\n  useEffect(() => {\r\n    const fetchFees = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      let effectiveStudentId = student_details_id;\r\n\r\n      if (!effectiveStudentId && student_no) {\r\n        try {\r\n          const searchResponse = await axios.get(`${API_BASE_URL}/student/search`, {\r\n            params: { student_no, _t: Date.now() }\r\n          });\r\n          const student = searchResponse.data[0];\r\n          if (student?.student_details_id) {\r\n            effectiveStudentId = student.student_details_id;\r\n          } else {\r\n            setError('No valid student_details_id found.');\r\n            setLoading(false);\r\n            return;\r\n          }\r\n        } catch (err) {\r\n          setError(`Error fetching student: ${err.message}`);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (!effectiveStudentId) {\r\n        setError('Missing student_details_id.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (!propFeesData) {\r\n        try {\r\n          const response = await axios.get(`${API_BASE_URL}/payment/${effectiveStudentId}`);\r\n          setFeesData(response.data);\r\n          setPayments(response.data.payments || []);\r\n        } catch (err) {\r\n          setError(`Error fetching fees: ${err.response?.data?.message || err.message}`);\r\n        }\r\n      } else {\r\n        setPayments(propFeesData.payments || []);\r\n      }\r\n\r\n      const initialMonths = Array.isArray(propSelectedMonths) ? propSelectedMonths : [];\r\n      setSelectedMonths(initialMonths);\r\n      if (onMonthSelect) {\r\n        console.log('Initial onMonthSelect call with:', initialMonths);\r\n        onMonthSelect(initialMonths);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchFees();\r\n  }, [student_no, student_details_id, propFeesData, onMonthSelect, propSelectedMonths]);\r\n\r\n  if (loading) return <div className=\"step-container\"><p>Loading...</p></div>;\r\n  if (error) return <div className=\"step-container\"><p className=\"error\">{error}</p></div>;\r\n  if (!feesData) return <div className=\"step-container\"><p>No data found.</p></div>;\r\n\r\n  const { course_fees, total_course_fees, admission_fee, total_fees } = feesData;\r\n  const paidMonths = payments.map(p => p.split(' ')[0]);\r\n\r\n  const getMonthStatus = (month) => {\r\n    const index = monthIndexMap[month];\r\n    if (paidMonths.includes(month)) return 'paid';\r\n    if (index <= currentMonthIndex) return 'due';\r\n    return 'upcoming';\r\n  };\r\n\r\n  const isMonthClickable = (month) => !paidMonths.includes(month);\r\n\r\n  const handleMonthClick = (month) => {\r\n    if (isMonthClickable(month)) {\r\n      const newSelectedMonths = selectedMonths.includes(month)\r\n        ? selectedMonths.filter(m => m !== month)\r\n        : [...selectedMonths, month];\r\n      setSelectedMonths(newSelectedMonths);\r\n      if (onMonthSelect) {\r\n        console.log('Calling onMonthSelect with:', newSelectedMonths);\r\n        onMonthSelect(newSelectedMonths);\r\n      }\r\n      if (onCourseSelect) {\r\n        onCourseSelect(currentCourse); // Maintain course selection\r\n      }\r\n    }\r\n  };\r\n\r\n  const feeRows = selectedMonths.length > 0\r\n    ? selectedMonths.flatMap(month =>\r\n        course_fees?.[month]\r\n          ? Object.entries(course_fees[month]).flatMap(([grade, courses]) =>\r\n              Object.entries(courses).map(([courseName, fee]) => ({\r\n                month,\r\n                courseName: courseName.charAt(0).toUpperCase() + courseName.slice(1),\r\n                grade: grade.replace('Grade ', ''),\r\n                fee,\r\n              }))\r\n            )\r\n          : []\r\n      )\r\n    : [];\r\n\r\n  const totalCourseFeesForSelected = feeRows.reduce((sum, row) => sum + row.fee, 0);\r\n  const totalWithAdmission = totalCourseFeesForSelected + (admission_fee || 0);\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <div className=\"courses-fees-header\">\r\n        <h4>Courses & Fees</h4>\r\n        <div className='date-container'>\r\n          <div className=\"period-selector-container\">\r\n            <select\r\n              className=\"year-dropdown\"\r\n              defaultValue={new Date().getFullYear()}\r\n              onChange={(e) => onCourseSelect?.(e.target.value)}\r\n            >\r\n              <option>Violin</option>\r\n              <option>Piano</option>\r\n              <option>Guitar</option>\r\n            </select>\r\n            <div className=\"legend\">\r\n              <span className=\"legend-item paid\">Paid</span>\r\n              <span className=\"legend-item due\">Due</span>\r\n              <span className=\"legend-item upcoming\">Upcoming</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"month-grid\">\r\n            {months.map((month) => {\r\n              const status = getMonthStatus(month);\r\n              const isClickable = isMonthClickable(month);\r\n              return (\r\n                <button\r\n                  key={month}\r\n                  className={`month-btn ${selectedMonths.includes(month) ? 'selected' : ''} ${status}`}\r\n                  onClick={() => handleMonthClick(month)}\r\n                  disabled={!isClickable}\r\n                >\r\n                  {month}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"fees-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Month</th>\r\n            <th>Course</th>\r\n            <th>Grade</th>\r\n            <th>Fees (Rs)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {feeRows.length > 0 ? (\r\n            feeRows.map((row, i) => (\r\n              <tr key={i}>\r\n                <td>{row.month}</td>\r\n                <td>{row.courseName}</td>\r\n                <td>{row.grade}</td>\r\n                <td>{row.fee}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"4\">Select months to view fee details.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"payment-summary\">\r\n        <div className=\"summary-row\"><span>Payment Total</span><span>{totalCourseFeesForSelected}</span></div>\r\n        <div className=\"summary-row\"><span>Admission Fee</span><span>{admission_fee || 0}</span></div>\r\n        <div className=\"summary-row total\"><span>Total</span><span>{totalWithAdmission}</span></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step2Courses;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
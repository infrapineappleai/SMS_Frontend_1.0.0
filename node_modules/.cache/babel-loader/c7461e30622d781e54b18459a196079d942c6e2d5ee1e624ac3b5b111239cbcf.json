{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SMS Final Final Code K\\\\Frontend\\\\src\\\\sections\\\\students\\\\AddStudentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport Stepper from \"./StudentFormStepper/StudentFormStepper\";\nimport Step1PersonalInfo from \"./StudentFormStepper/Step1PersonalInfo\";\nimport Step2ContactDetails from \"./StudentFormStepper/Step2ContactDetails\";\nimport Step3EducationalRecords from \"./StudentFormStepper/Step3EducationalRecords\";\nimport Step4AcademicDetails from \"./StudentFormStepper/Step4AcademicDetails\";\nimport Step5Summary from \"./StudentFormStepper/Step5Summary\";\nimport \"../../Styles/Students-css/AddStudentForm.css\";\nimport closeIcon from \"../../assets/icons/Close.png\";\nimport successToastIcon from '../../../assets/icons/Success.png';\nimport { useToast } from \"../../modals/ToastProvider\";\nimport { createStudentWithOptionalPhoto, updateStudent, getDropdownOptions } from \"../../integration/studentAPI\";\nimport NextButton from \"../../Components/Buttons/Next_button\";\nimport PreviousButton from \"../../Components/Buttons/PreviousButton\";\nimport LongNextButton from \"../../Components/Buttons/LongNextButton\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getInitialFormData = () => ({\n  status: \"Active\",\n  salutation: \"\",\n  first_name: \"\",\n  last_name: \"\",\n  name: \"\",\n  date_of_birth: \"\",\n  gender: \"\",\n  phn_num: \"\",\n  ice_contact: \"\",\n  email: \"\",\n  address: \"\",\n  photo_url: \"/default-avatar.png\",\n  previewUrl: null,\n  photoFile: null,\n  branch: \"\",\n  student_no: \"\",\n  course: \"\",\n  grade: \"\",\n  schedule_day: \"\",\n  schedule_time: \"\",\n  payment: {\n    amount: \"\",\n    status: \"pending\"\n  },\n  assignedCourses: [],\n  schedules: [],\n  resetKey: Date.now()\n});\nconst AddStudentForm = ({\n  isOpen,\n  onClose,\n  onAddStudent,\n  initialData,\n  isEditMode\n}) => {\n  _s();\n  const {\n    showToast\n  } = useToast();\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState(getInitialFormData);\n  const [errors, setErrors] = useState({});\n  const [showSummary, setShowSummary] = useState(false);\n  const totalSteps = 4;\n  const steps = useMemo(() => [\"Personal Information\", \"Contact Details\", \"Educational Records\", \"Academic Details\"], []);\n  useEffect(() => {\n    if (initialData && isOpen) {\n      console.log(\"Initial Data for Edit:\", {\n        phn_num: initialData.phn_num,\n        ice_contact: initialData.ice_contact,\n        fullData: initialData\n      });\n      setFormData({\n        ...getInitialFormData(),\n        ...initialData,\n        name: `${initialData.salutation || \"\"} ${initialData.first_name || \"\"} ${initialData.last_name || \"\"}`.trim(),\n        course: \"\",\n        grade: \"\",\n        phn_num: initialData.phn_num || \"\",\n        ice_contact: initialData.ice_contact || \"\",\n        status: initialData.status ? initialData.status.charAt(0).toUpperCase() + initialData.status.slice(1).toLowerCase() : \"Active\",\n        assignedCourses: Array.isArray(initialData.assignedCourses) ? initialData.assignedCourses.map((c, index) => ({\n          ...c,\n          id: c.id || Date.now() + index\n        })) : initialData.course ? [{\n          course: initialData.course,\n          grade: initialData.grade,\n          id: Date.now()\n        }] : [],\n        schedules: Array.isArray(initialData.schedules) ? initialData.schedules.map((s, index) => ({\n          id: s.id || Date.now() + index,\n          branch: s.branch || initialData.branch || \"N/A\",\n          studentId: s.studentId || s.student_no || initialData.student_no || \"N/A\",\n          day: s.day || s.schedule_day,\n          time: s.time || s.schedule_time,\n          course: s.course || initialData.course,\n          grade: s.grade || initialData.grade\n        })) : initialData.schedule_day && initialData.schedule_day !== \"Invalid date\" ? [{\n          day: initialData.schedule_day,\n          time: initialData.schedule_time,\n          branch: initialData.branch || \"N/A\",\n          studentId: initialData.student_no || \"N/A\",\n          id: Date.now()\n        }] : [],\n        photo_url: initialData.photo_url || \"/default-avatar.png\",\n        previewUrl: initialData.photo_url || null,\n        resetKey: Date.now()\n      });\n      setStep(1);\n      setErrors({});\n      setShowSummary(false);\n    } else if (!isOpen) {\n      setFormData(getInitialFormData());\n      setStep(1);\n      setErrors({});\n      setShowSummary(false);\n    }\n  }, [initialData, isOpen]);\n  const validateStep = cur => {\n    const errs = {};\n    if (cur === 1) {\n      [\"salutation\", \"first_name\", \"last_name\", \"date_of_birth\", \"gender\"].forEach(f => {\n        if (!formData[f]) errs[f] = \"Required\";\n      });\n    }\n    if (cur === 2) {\n      [\"phn_num\", \"ice_contact\", \"email\", \"address\"].forEach(f => {\n        if (!formData[f]) errs[f] = \"Required\";\n      });\n      if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n        errs.email = \"Invalid email format\";\n      }\n    }\n    if (cur === 3) {\n      var _formData$assignedCou;\n      if (!((_formData$assignedCou = formData.assignedCourses) !== null && _formData$assignedCou !== void 0 && _formData$assignedCou.length)) errs.assignedCourses = \"At least one course is required\";\n    }\n    if (cur === 4) {\n      var _formData$schedules;\n      if (!formData.branch) errs.branch = \"Branch is required\";\n      if (!formData.student_no) errs.student_no = \"Student ID is required\";\n      if (!((_formData$schedules = formData.schedules) !== null && _formData$schedules !== void 0 && _formData$schedules.length)) errs.schedules = \"At least one schedule is required\";\n    }\n    return errs;\n  };\n  const handleNext = () => {\n    const errs = validateStep(step);\n    if (Object.keys(errs).length) {\n      setErrors(errs);\n      showToast({\n        title: \"Validation Error\",\n        message: \"Please fill all required fields\",\n        isError: true\n      });\n      return;\n    }\n    setErrors({});\n    if (step < totalSteps) {\n      setStep(step + 1);\n    } else {\n      setShowSummary(true);\n    }\n  };\n  const handleBack = () => {\n    setStep(prev => Math.max(prev - 1, 1));\n  };\n  const handleFormDataChange = updates => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        ...updates\n      };\n      if (\"salutation\" in updates || \"first_name\" in updates || \"last_name\" in updates) {\n        newData.name = `${newData.salutation || \"\"} ${newData.first_name || \"\"} ${newData.last_name || \"\"}`.trim();\n      }\n      return newData;\n    });\n    setErrors(prev => {\n      const updated = {\n        ...prev\n      };\n      Object.keys(updates).forEach(k => delete updated[k]);\n      return updated;\n    });\n  };\n  const handleImageChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        handleFormDataChange({\n          photoFile: file,\n          previewUrl: reader.result\n        });\n      };\n      reader.readAsDataURL(file);\n    } else {\n      handleFormDataChange({\n        photoFile: null,\n        previewUrl: null,\n        photo_url: \"/default-avatar.png\"\n      });\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      var _formData$assignedCou2, _formData$schedules2;\n      const errs = validateStep(4);\n      if (Object.keys(errs).length) {\n        setErrors(errs);\n        showToast({\n          title: \"Validation Error\",\n          message: \"Please ensure all required fields are filled\",\n          isError: true\n        });\n        return;\n      }\n      if (!formData.student_no || formData.student_no.trim() === \"\") {\n        setErrors(prev => ({\n          ...prev,\n          student_no: \"Student number is required\"\n        }));\n        showToast({\n          title: \"Validation Error\",\n          message: \"Student number is required\",\n          isError: true\n        });\n        return;\n      }\n      const branches = await getDropdownOptions(\"branches\");\n      const matchedBranch = branches.find(b => b.branch_name === formData.branch);\n      if (!matchedBranch) {\n        setErrors(prev => ({\n          ...prev,\n          branch: \"Invalid branch selected\"\n        }));\n        showToast({\n          title: \"Validation Error\",\n          message: \"Please select a valid branch\",\n          isError: true\n        });\n        return;\n      }\n      const courses = await getDropdownOptions(\"courses\");\n      const gradeIds = [];\n      for (const {\n        course,\n        grade\n      } of formData.assignedCourses || []) {\n        var _courses$find, _grades$find;\n        const courseId = (_courses$find = courses.find(c => c.name === course)) === null || _courses$find === void 0 ? void 0 : _courses$find.id;\n        if (!courseId) continue;\n        const grades = await getDropdownOptions(\"grades\", {\n          courseId\n        });\n        const gradeId = (_grades$find = grades.find(g => g.grade_name === grade)) === null || _grades$find === void 0 ? void 0 : _grades$find.id;\n        if (gradeId) gradeIds.push(gradeId);\n      }\n      if (!gradeIds.length && (_formData$assignedCou2 = formData.assignedCourses) !== null && _formData$assignedCou2 !== void 0 && _formData$assignedCou2.length) {\n        setErrors(prev => ({\n          ...prev,\n          assignedCourses: \"No valid grades found for selected courses\"\n        }));\n        showToast({\n          title: \"Validation Error\",\n          message: \"Please select valid courses and grades\",\n          isError: true\n        });\n        return;\n      }\n      const slotIds = (formData.schedules || []).map(s => s.id).filter(Boolean);\n      if (!slotIds.length && (_formData$schedules2 = formData.schedules) !== null && _formData$schedules2 !== void 0 && _formData$schedules2.length) {\n        setErrors(prev => ({\n          ...prev,\n          schedules: \"No valid schedules selected\"\n        }));\n        showToast({\n          title: \"Validation Error\",\n          message: \"Please select at least one valid schedule\",\n          isError: true\n        });\n        return;\n      }\n      const payload = new FormData();\n      payload.append(\"user\", JSON.stringify({\n        name: formData.name,\n        first_name: formData.first_name,\n        last_name: formData.last_name,\n        username: formData.username || formData.last_name,\n        password: formData.password || \"defaultpassword\",\n        email: formData.email,\n        phn_num: formData.phn_num,\n        gender: formData.gender,\n        date_of_birth: new Date(formData.date_of_birth).toISOString().split(\"T\")[0],\n        address: formData.address,\n        role: \"student\",\n        status: formData.status.toLowerCase()\n      }));\n      payload.append(\"student_details\", JSON.stringify({\n        student_no: formData.student_no.trim(),\n        salutation: formData.salutation || \"\",\n        ice_contact: formData.ice_contact || formData.phn_num || \"\"\n      }));\n      payload.append(\"grade_ids\", JSON.stringify(gradeIds));\n      payload.append(\"slot_ids\", JSON.stringify(slotIds));\n      payload.append(\"branch_ids\", JSON.stringify([matchedBranch.id]));\n      if (formData.photoFile instanceof File) {\n        payload.append(\"photo\", formData.photoFile);\n      }\n      console.log(\"AddStudentForm: Payload entries:\", [...payload]);\n      let studentData;\n      if (isEditMode && (initialData !== null && initialData !== void 0 && initialData.id || initialData !== null && initialData !== void 0 && initialData.user_id)) {\n        var _formData$assignedCou3, _formData$assignedCou4;\n        const studentId = initialData.id || initialData.user_id;\n        const result = await updateStudent(studentId, payload);\n        studentData = {\n          id: studentId,\n          ...result,\n          name: result.name || `${formData.salutation || \"\"} ${formData.first_name} ${formData.last_name}`.trim(),\n          first_name: result.first_name || formData.first_name,\n          last_name: result.last_name || formData.last_name,\n          course: result.course || ((_formData$assignedCou3 = formData.assignedCourses) === null || _formData$assignedCou3 === void 0 ? void 0 : (_formData$assignedCou4 = _formData$assignedCou3[0]) === null || _formData$assignedCou4 === void 0 ? void 0 : _formData$assignedCou4.course) || formData.course || \"N/A\",\n          status: result.status || formData.status || \"Active\",\n          photo_url: result.photo_url || formData.photo_url,\n          phn_num: result.phn_num || formData.phn_num,\n          ice_contact: result.ice_contact || formData.ice_contact,\n          email: result.email || formData.email,\n          address: result.address || formData.address,\n          date_of_birth: result.date_of_birth || formData.date_of_birth,\n          gender: result.gender || formData.gender,\n          branch: result.branch || formData.branch,\n          student_no: result.student_no || formData.student_no,\n          assignedCourses: result.assignedCourses || formData.assignedCourses || [],\n          schedules: result.schedules || formData.schedules || [],\n          payment: result.payment || formData.payment || {\n            amount: \"\",\n            status: \"pending\"\n          }\n        };\n        setFormData(prev => ({\n          ...prev,\n          photo_url: result.photo_url || prev.photo_url,\n          previewUrl: result.photo_url || prev.previewUrl\n        }));\n        await onAddStudent(studentData);\n      } else {\n        var _formData$assignedCou5, _formData$assignedCou6;\n        const result = await createStudentWithOptionalPhoto(payload);\n        console.log(\"createStudentWithOptionalPhoto result:\", result);\n        studentData = {\n          id: result.id || result.user_id || Date.now(),\n          ...result,\n          name: result.name || `${formData.salutation || \"\"} ${formData.first_name} ${formData.last_name}`.trim(),\n          first_name: result.first_name || formData.first_name,\n          last_name: result.last_name || formData.last_name,\n          course: result.course || ((_formData$assignedCou5 = formData.assignedCourses) === null || _formData$assignedCou5 === void 0 ? void 0 : (_formData$assignedCou6 = _formData$assignedCou5[0]) === null || _formData$assignedCou6 === void 0 ? void 0 : _formData$assignedCou6.course) || formData.course || \"N/A\",\n          status: result.status || formData.status || \"Active\",\n          photo_url: result.photo_url || formData.photo_url || \"/default-avatar.png\",\n          phn_num: result.phn_num || formData.phn_num,\n          ice_contact: result.ice_contact || formData.ice_contact,\n          email: result.email || formData.email,\n          address: result.address || formData.address,\n          date_of_birth: result.date_of_birth || formData.date_of_birth,\n          gender: result.gender || formData.gender,\n          branch: result.branch || formData.branch,\n          student_no: result.student_no || formData.student_no,\n          assignedCourses: result.assignedCourses || formData.assignedCourses || [],\n          schedules: result.schedules || formData.schedules || [],\n          payment: result.payment || formData.payment || {\n            amount: \"\",\n            status: \"pending\"\n          }\n        };\n        await onAddStudent(studentData);\n      }\n      showToast({\n        title: \"Success\",\n        message: isEditMode ? \"Student updated successfully!\" : \"Student created successfully!\"\n      });\n      setShowSummary(false);\n      setFormData({\n        ...getInitialFormData(),\n        resetKey: Date.now()\n      });\n      setStep(1);\n      onClose();\n    } catch (error) {\n      console.error(\"AddStudentForm: Submit error:\", error);\n      showToast({\n        title: \"Error\",\n        message: `Failed to save student: ${error.message || \"Unknown error\"}`,\n        isError: true\n      });\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"popup-header\",\n            children: initialData ? \"Edit Student\" : \"Student Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"close\",\n            className: \"close-icon\",\n            onClick: () => {\n              setFormData({\n                ...getInitialFormData(),\n                resetKey: Date.now()\n              });\n              setStep(1);\n              setErrors({});\n              setShowSummary(false);\n              onClose();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stepper-wrapper-unique\",\n          children: /*#__PURE__*/_jsxDEV(Stepper, {\n            steps: steps,\n            currentStep: step\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content-wrapper\",\n          children: [step === 1 && /*#__PURE__*/_jsxDEV(Step1PersonalInfo, {\n            // Force re-mount to clear file input\n            formData: formData,\n            onChange: handleFormDataChange,\n            errors: errors,\n            onImageChange: handleImageChange\n          }, formData.resetKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this), step === 2 && /*#__PURE__*/_jsxDEV(Step2ContactDetails, {\n            formData: formData,\n            onChange: handleFormDataChange,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this), step === 3 && /*#__PURE__*/_jsxDEV(Step3EducationalRecords, {\n            formData: formData,\n            onChange: handleFormDataChange,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this), step === 4 && /*#__PURE__*/_jsxDEV(Step4AcademicDetails, {\n            formData: formData,\n            onChange: handleFormDataChange,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `modal-actions ${step === 1 ? \"long-next-layout\" : \"standard-buttons\"}`,\n          children: step === 1 ? /*#__PURE__*/_jsxDEV(LongNextButton, {\n            onClick: handleNext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(PreviousButton, {\n              onClick: handleBack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n              onClick: handleNext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(Step5Summary, {\n      isOpen: showSummary,\n      studentData: formData,\n      onClose: () => {\n        setShowSummary(false);\n        setFormData({\n          ...getInitialFormData(),\n          resetKey: Date.now()\n        });\n        setStep(1);\n        onClose();\n      },\n      onSave: handleSubmit,\n      onEdit: () => {\n        setShowSummary(false);\n        setStep(1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AddStudentForm, \"FeCovsfFSAEEaAyPNPobQwWfrgg=\", false, function () {\n  return [useToast];\n});\n_c = AddStudentForm;\nexport default AddStudentForm;\nvar _c;\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Stepper","Step1PersonalInfo","Step2ContactDetails","Step3EducationalRecords","Step4AcademicDetails","Step5Summary","closeIcon","successToastIcon","useToast","createStudentWithOptionalPhoto","updateStudent","getDropdownOptions","NextButton","PreviousButton","LongNextButton","jsxDEV","_jsxDEV","Fragment","_Fragment","getInitialFormData","status","salutation","first_name","last_name","name","date_of_birth","gender","phn_num","ice_contact","email","address","photo_url","previewUrl","photoFile","branch","student_no","course","grade","schedule_day","schedule_time","payment","amount","assignedCourses","schedules","resetKey","Date","now","AddStudentForm","isOpen","onClose","onAddStudent","initialData","isEditMode","_s","showToast","step","setStep","formData","setFormData","errors","setErrors","showSummary","setShowSummary","totalSteps","steps","console","log","fullData","trim","charAt","toUpperCase","slice","toLowerCase","Array","isArray","map","c","index","id","s","studentId","day","time","validateStep","cur","errs","forEach","f","test","_formData$assignedCou","length","_formData$schedules","handleNext","Object","keys","title","message","isError","handleBack","prev","Math","max","handleFormDataChange","updates","newData","updated","k","handleImageChange","e","_e$target$files","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","_formData$assignedCou2","_formData$schedules2","branches","matchedBranch","find","b","branch_name","courses","gradeIds","_courses$find","_grades$find","courseId","grades","gradeId","g","grade_name","push","slotIds","filter","Boolean","payload","FormData","append","JSON","stringify","username","password","toISOString","split","role","File","studentData","user_id","_formData$assignedCou3","_formData$assignedCou4","_formData$assignedCou5","_formData$assignedCou6","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","currentStep","onChange","onImageChange","onSave","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SMS Final Final Code K/Frontend/src/sections/students/AddStudentForm.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Stepper from \"./StudentFormStepper/StudentFormStepper\";\r\nimport Step1PersonalInfo from \"./StudentFormStepper/Step1PersonalInfo\";\r\nimport Step2ContactDetails from \"./StudentFormStepper/Step2ContactDetails\";\r\nimport Step3EducationalRecords from \"./StudentFormStepper/Step3EducationalRecords\";\r\nimport Step4AcademicDetails from \"./StudentFormStepper/Step4AcademicDetails\";\r\nimport Step5Summary from \"./StudentFormStepper/Step5Summary\";\r\nimport \"../../Styles/Students-css/AddStudentForm.css\";\r\nimport closeIcon from \"../../assets/icons/Close.png\";\r\nimport successToastIcon from '../../../assets/icons/Success.png';\r\nimport { useToast } from \"../../modals/ToastProvider\";\r\nimport {\r\n  createStudentWithOptionalPhoto,\r\n  updateStudent,\r\n  getDropdownOptions,\r\n} from \"../../integration/studentAPI\";\r\nimport NextButton from \"../../Components/Buttons/Next_button\";\r\nimport PreviousButton from \"../../Components/Buttons/PreviousButton\";\r\nimport LongNextButton from \"../../Components/Buttons/LongNextButton\";\r\n\r\nconst getInitialFormData = () => ({\r\n  status: \"Active\",\r\n  salutation: \"\",\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  name: \"\",\r\n  date_of_birth: \"\",\r\n  gender: \"\",\r\n  phn_num: \"\",\r\n  ice_contact: \"\",\r\n  email: \"\",\r\n  address: \"\",\r\n  photo_url: \"/default-avatar.png\",\r\n  previewUrl: null,\r\n  photoFile: null,\r\n  branch: \"\",\r\n  student_no: \"\",\r\n  course: \"\",\r\n  grade: \"\",\r\n  schedule_day: \"\",\r\n  schedule_time: \"\",\r\n  payment: { amount: \"\", status: \"pending\" },\r\n  assignedCourses: [],\r\n  schedules: [],\r\n  resetKey: Date.now(), \r\n});\r\n\r\nconst AddStudentForm = ({\r\n  isOpen,\r\n  onClose,\r\n  onAddStudent,\r\n  initialData,\r\n  isEditMode,\r\n}) => {\r\n  const { showToast } = useToast();\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState(getInitialFormData);\r\n  const [errors, setErrors] = useState({});\r\n  const [showSummary, setShowSummary] = useState(false);\r\n  const totalSteps = 4;\r\n\r\n  const steps = useMemo(\r\n    () => [\r\n      \"Personal Information\",\r\n      \"Contact Details\",\r\n      \"Educational Records\",\r\n      \"Academic Details\",\r\n    ],\r\n    []\r\n  );\r\n\r\nuseEffect(() => {\r\n  if (initialData && isOpen) {\r\n    console.log(\"Initial Data for Edit:\", {\r\n      phn_num: initialData.phn_num,\r\n      ice_contact: initialData.ice_contact,\r\n      fullData: initialData\r\n    });\r\n    setFormData({\r\n      ...getInitialFormData(),\r\n      ...initialData,\r\n      name: `${initialData.salutation || \"\"} ${initialData.first_name || \"\"} ${\r\n        initialData.last_name || \"\"\r\n      }`.trim(),\r\n      course: \"\",\r\n      grade: \"\",\r\n      phn_num: initialData.phn_num || \"\",\r\n      ice_contact: initialData.ice_contact || \"\",\r\n      status: initialData.status\r\n        ? initialData.status.charAt(0).toUpperCase() + initialData.status.slice(1).toLowerCase()\r\n        : \"Active\", \r\n      assignedCourses: Array.isArray(initialData.assignedCourses)\r\n        ? initialData.assignedCourses.map((c, index) => ({\r\n            ...c,\r\n            id: c.id || Date.now() + index,\r\n          }))\r\n        : initialData.course\r\n        ? [\r\n            {\r\n              course: initialData.course,\r\n              grade: initialData.grade,\r\n              id: Date.now(),\r\n            },\r\n          ]\r\n        : [],\r\n      schedules: Array.isArray(initialData.schedules)\r\n        ? initialData.schedules.map((s, index) => ({\r\n            id: s.id || Date.now() + index,\r\n            branch: s.branch || initialData.branch || \"N/A\",\r\n            studentId: s.studentId || s.student_no || initialData.student_no || \"N/A\",\r\n            day: s.day || s.schedule_day,\r\n            time: s.time || s.schedule_time,\r\n            course: s.course || initialData.course,\r\n            grade: s.grade || initialData.grade,\r\n          }))\r\n        : initialData.schedule_day && initialData.schedule_day !== \"Invalid date\"\r\n        ? [\r\n            {\r\n              day: initialData.schedule_day,\r\n              time: initialData.schedule_time,\r\n              branch: initialData.branch || \"N/A\",\r\n              studentId: initialData.student_no || \"N/A\",\r\n              id: Date.now(),\r\n            },\r\n          ]\r\n        : [],\r\n      photo_url: initialData.photo_url || \"/default-avatar.png\",\r\n      previewUrl: initialData.photo_url || null,\r\n      resetKey: Date.now(),\r\n    });\r\n    setStep(1);\r\n    setErrors({});\r\n    setShowSummary(false);\r\n  } else if (!isOpen) {\r\n    setFormData(getInitialFormData());\r\n    setStep(1);\r\n    setErrors({});\r\n    setShowSummary(false);\r\n  }\r\n}, [initialData, isOpen]);\r\n\r\n  const validateStep = (cur) => {\r\n    const errs = {};\r\n    if (cur === 1) {\r\n      [\"salutation\", \"first_name\", \"last_name\", \"date_of_birth\", \"gender\"].forEach(\r\n        (f) => {\r\n          if (!formData[f]) errs[f] = \"Required\";\r\n        }\r\n      );\r\n    }\r\n    if (cur === 2) {\r\n      [\"phn_num\", \"ice_contact\", \"email\", \"address\"].forEach((f) => {\r\n        if (!formData[f]) errs[f] = \"Required\";\r\n      });\r\n      if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n        errs.email = \"Invalid email format\";\r\n      }\r\n    }\r\n    if (cur === 3) {\r\n      if (!formData.assignedCourses?.length)\r\n        errs.assignedCourses = \"At least one course is required\";\r\n    }\r\n    if (cur === 4) {\r\n      if (!formData.branch) errs.branch = \"Branch is required\";\r\n      if (!formData.student_no) errs.student_no = \"Student ID is required\";\r\n      if (!formData.schedules?.length)\r\n        errs.schedules = \"At least one schedule is required\";\r\n    }\r\n    return errs;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const errs = validateStep(step);\r\n    if (Object.keys(errs).length) {\r\n      setErrors(errs);\r\n      showToast({\r\n        title: \"Validation Error\",\r\n        message: \"Please fill all required fields\",\r\n        isError: true,\r\n      });\r\n      return;\r\n    }\r\n    setErrors({});\r\n    if (step < totalSteps) {\r\n      setStep(step + 1);\r\n    } else {\r\n      setShowSummary(true);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setStep((prev) => Math.max(prev - 1, 1));\r\n  };\r\n\r\n  const handleFormDataChange = (updates) => {\r\n    setFormData((prev) => {\r\n      const newData = { ...prev, ...updates };\r\n      if (\r\n        \"salutation\" in updates ||\r\n        \"first_name\" in updates ||\r\n        \"last_name\" in updates\r\n      ) {\r\n        newData.name = `${newData.salutation || \"\"} ${newData.first_name || \"\"} ${\r\n          newData.last_name || \"\"\r\n        }`.trim();\r\n      }\r\n      return newData;\r\n    });\r\n    setErrors((prev) => {\r\n      const updated = { ...prev };\r\n      Object.keys(updates).forEach((k) => delete updated[k]);\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        handleFormDataChange({\r\n          photoFile: file,\r\n          previewUrl: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      handleFormDataChange({\r\n        photoFile: null,\r\n        previewUrl: null,\r\n        photo_url: \"/default-avatar.png\",\r\n      });\r\n    }\r\n  };\r\n\r\nconst handleSubmit = async () => {\r\n  try {\r\n    const errs = validateStep(4);\r\n    if (Object.keys(errs).length) {\r\n      setErrors(errs);\r\n      showToast({\r\n        title: \"Validation Error\",\r\n        message: \"Please ensure all required fields are filled\",\r\n        isError: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!formData.student_no || formData.student_no.trim() === \"\") {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        student_no: \"Student number is required\",\r\n      }));\r\n      showToast({\r\n        title: \"Validation Error\",\r\n        message: \"Student number is required\",\r\n        isError: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const branches = await getDropdownOptions(\"branches\");\r\n    const matchedBranch = branches.find(\r\n      (b) => b.branch_name === formData.branch\r\n    );\r\n    if (!matchedBranch) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        branch: \"Invalid branch selected\",\r\n      }));\r\n      showToast({\r\n        title: \"Validation Error\",\r\n        message: \"Please select a valid branch\",\r\n        isError: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const courses = await getDropdownOptions(\"courses\");\r\n    const gradeIds = [];\r\n    for (const { course, grade } of formData.assignedCourses || []) {\r\n      const courseId = courses.find((c) => c.name === course)?.id;\r\n      if (!courseId) continue;\r\n      const grades = await getDropdownOptions(\"grades\", { courseId });\r\n      const gradeId = grades.find((g) => g.grade_name === grade)?.id;\r\n      if (gradeId) gradeIds.push(gradeId);\r\n    }\r\n\r\n    if (!gradeIds.length && formData.assignedCourses?.length) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        assignedCourses: \"No valid grades found for selected courses\",\r\n      }));\r\n      showToast({\r\n        title: \"Validation Error\",\r\n        message: \"Please select valid courses and grades\",\r\n        isError: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const slotIds = (formData.schedules || [])\r\n      .map((s) => s.id)\r\n      .filter(Boolean);\r\n    if (!slotIds.length && formData.schedules?.length) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        schedules: \"No valid schedules selected\",\r\n      }));\r\n      showToast({\r\n        title: \"Validation Error\",\r\n        message: \"Please select at least one valid schedule\",\r\n        isError: true,\r\n      });\r\n      return;\r\n    }\r\n\r\nconst payload = new FormData();\r\npayload.append(\r\n  \"user\",\r\n  JSON.stringify({\r\n    name: formData.name,\r\n    first_name: formData.first_name,\r\n    last_name: formData.last_name,\r\n    username: formData.username || formData.last_name,\r\n    password: formData.password || \"defaultpassword\",\r\n    email: formData.email,\r\n    phn_num: formData.phn_num,\r\n    gender: formData.gender,\r\n    date_of_birth: new Date(formData.date_of_birth)\r\n      .toISOString()\r\n      .split(\"T\")[0],\r\n    address: formData.address,\r\n    role: \"student\",\r\n    status: formData.status.toLowerCase(),  \r\n  })\r\n);\r\n    payload.append(\r\n      \"student_details\",\r\n      JSON.stringify({\r\n        student_no: formData.student_no.trim(),\r\n        salutation: formData.salutation || \"\",\r\n        ice_contact: formData.ice_contact || formData.phn_num || \"\",\r\n      })\r\n    );\r\n    payload.append(\"grade_ids\", JSON.stringify(gradeIds));\r\n    payload.append(\"slot_ids\", JSON.stringify(slotIds));\r\n    payload.append(\"branch_ids\", JSON.stringify([matchedBranch.id]));\r\n    if (formData.photoFile instanceof File) {\r\n      payload.append(\"photo\", formData.photoFile);\r\n    }\r\n\r\n    console.log(\"AddStudentForm: Payload entries:\", [...payload]);\r\n\r\n    let studentData;\r\n    if (isEditMode && (initialData?.id || initialData?.user_id)) {\r\n      const studentId = initialData.id || initialData.user_id;\r\n      const result = await updateStudent(studentId, payload);\r\n      studentData = {\r\n        id: studentId,\r\n        ...result,\r\n        name: result.name || `${formData.salutation || \"\"} ${formData.first_name} ${formData.last_name}`.trim(),\r\n        first_name: result.first_name || formData.first_name,\r\n        last_name: result.last_name || formData.last_name,\r\n        course: result.course || formData.assignedCourses?.[0]?.course || formData.course || \"N/A\",\r\n        status: result.status || formData.status || \"Active\",\r\n        photo_url: result.photo_url || formData.photo_url,\r\n        phn_num: result.phn_num || formData.phn_num,\r\n        ice_contact: result.ice_contact || formData.ice_contact,\r\n        email: result.email || formData.email,\r\n        address: result.address || formData.address,\r\n        date_of_birth: result.date_of_birth || formData.date_of_birth,\r\n        gender: result.gender || formData.gender,\r\n        branch: result.branch || formData.branch,\r\n        student_no: result.student_no || formData.student_no,\r\n        assignedCourses: result.assignedCourses || formData.assignedCourses || [],\r\n        schedules: result.schedules || formData.schedules || [],\r\n        payment: result.payment || formData.payment || { amount: \"\", status: \"pending\" },\r\n      };\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        photo_url: result.photo_url || prev.photo_url,\r\n        previewUrl: result.photo_url || prev.previewUrl,\r\n      }));\r\n      await onAddStudent(studentData);\r\n    } else {\r\n      const result = await createStudentWithOptionalPhoto(payload);\r\n      console.log(\"createStudentWithOptionalPhoto result:\", result);\r\n      studentData = {\r\n        id: result.id || result.user_id || Date.now(),  \r\n        ...result,\r\n        name: result.name || `${formData.salutation || \"\"} ${formData.first_name} ${formData.last_name}`.trim(),\r\n        first_name: result.first_name || formData.first_name,\r\n        last_name: result.last_name || formData.last_name,\r\n        course: result.course || formData.assignedCourses?.[0]?.course || formData.course || \"N/A\",\r\n        status: result.status || formData.status || \"Active\",\r\n        photo_url: result.photo_url || formData.photo_url || \"/default-avatar.png\",\r\n        phn_num: result.phn_num || formData.phn_num,\r\n        ice_contact: result.ice_contact || formData.ice_contact,\r\n        email: result.email || formData.email,\r\n        address: result.address || formData.address,\r\n        date_of_birth: result.date_of_birth || formData.date_of_birth,\r\n        gender: result.gender || formData.gender,\r\n        branch: result.branch || formData.branch,\r\n        student_no: result.student_no || formData.student_no,\r\n        assignedCourses: result.assignedCourses || formData.assignedCourses || [],\r\n        schedules: result.schedules || formData.schedules || [],\r\n        payment: result.payment || formData.payment || { amount: \"\", status: \"pending\" },\r\n      };\r\n      await onAddStudent(studentData);\r\n    }\r\n\r\n    showToast({\r\n      title: \"Success\",\r\n      message: isEditMode ? \"Student updated successfully!\" : \"Student created successfully!\",\r\n    });\r\n    setShowSummary(false);\r\n    setFormData({ ...getInitialFormData(), resetKey: Date.now() });\r\n    setStep(1);\r\n    onClose();\r\n  } catch (error) {\r\n    console.error(\"AddStudentForm: Submit error:\", error);\r\n    showToast({\r\n      title: \"Error\",\r\n      message: `Failed to save student: ${error.message || \"Unknown error\"}`,\r\n      isError: true,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      {!showSummary && (\r\n        <div className=\"student-modal-overlay\">\r\n          <div className=\"student-modal\">\r\n            <div className=\"modal-header\">\r\n              <h2 className=\"popup-header\">\r\n                {initialData ? \"Edit Student\" : \"Student Registration\"}\r\n              </h2>\r\n              <img\r\n                src={closeIcon}\r\n                alt=\"close\"\r\n                className=\"close-icon\"\r\n                onClick={() => {\r\n                  setFormData({ ...getInitialFormData(), resetKey: Date.now() });\r\n                  setStep(1);\r\n                  setErrors({});\r\n                  setShowSummary(false);\r\n                  onClose();\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"stepper-wrapper-unique\">\r\n              <Stepper steps={steps} currentStep={step} />\r\n            </div>\r\n            <div className=\"modal-content-wrapper\">\r\n              {step === 1 && (\r\n                <Step1PersonalInfo\r\n                  key={formData.resetKey} // Force re-mount to clear file input\r\n                  formData={formData}\r\n                  onChange={handleFormDataChange}\r\n                  errors={errors}\r\n                  onImageChange={handleImageChange}\r\n                />\r\n              )}\r\n              {step === 2 && (\r\n                <Step2ContactDetails\r\n                  formData={formData}\r\n                  onChange={handleFormDataChange}\r\n                  errors={errors}\r\n                />\r\n              )}\r\n              {step === 3 && (\r\n                <Step3EducationalRecords\r\n                  formData={formData}\r\n                  onChange={handleFormDataChange}\r\n                  errors={errors}\r\n                />\r\n              )}\r\n              {step === 4 && (\r\n                <Step4AcademicDetails\r\n                  formData={formData}\r\n                  onChange={handleFormDataChange}\r\n                  errors={errors}\r\n                />\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`modal-actions ${\r\n                step === 1 ? \"long-next-layout\" : \"standard-buttons\"\r\n              }`}\r\n            >\r\n              {step === 1 ? (\r\n                <LongNextButton onClick={handleNext} />\r\n              ) : (\r\n                <>\r\n                  <PreviousButton onClick={handleBack} />\r\n                  <NextButton onClick={handleNext} />\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showSummary && (\r\n        <Step5Summary\r\n          isOpen={showSummary}\r\n          studentData={formData}\r\n          onClose={() => {\r\n            setShowSummary(false);\r\n            setFormData({ ...getInitialFormData(), resetKey: Date.now() });\r\n            setStep(1);\r\n            onClose();\r\n          }}\r\n          onSave={handleSubmit}\r\n          onEdit={() => {\r\n            setShowSummary(false);\r\n            setStep(1);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddStudentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
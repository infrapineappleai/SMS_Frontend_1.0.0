{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SMS Final Final Code K\\\\Frontend\\\\src\\\\sections\\\\payments\\\\models\\\\PaymentDetailsModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport '../../../Styles/payment/PaymentDetailsModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nconst PaymentDetailsModal = ({\n  isOpen,\n  onClose,\n  paymentData\n}) => {\n  _s();\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [course, setCourse] = useState('Unknown');\n  const [grade, setGrade] = useState('Unknown');\n  const [loading, setLoading] = useState(false);\n  const extractPaymentAmount = useCallback(payment => {\n    const possibleAmountFields = ['payment', 'amount', 'payment_amount', 'paymentAmount', 'total_amount', 'totalAmount', 'fee_amount', 'feeAmount', 'monthly_fee', 'monthlyFee', 'tuition_fee', 'tuitionFee', 'course_fee', 'courseFee', 'paid_amount', 'paidAmount'];\n    for (const field of possibleAmountFields) {\n      if (payment && payment[field] !== undefined && payment[field] !== null) {\n        const value = payment[field];\n        const numValue = typeof value === 'string' ? parseFloat(value) : Number(value);\n        if (!isNaN(numValue) && numValue > 0) {\n          return numValue;\n        }\n      }\n    }\n    return 0;\n  }, []);\n  const safeExtract = useCallback((obj, paths) => {\n    if (!obj) return null;\n    for (const path of paths) {\n      const keys = path.split('.');\n      let current = obj;\n      let isValid = true;\n      for (const key of keys) {\n        if (current && typeof current === 'object' && key in current) {\n          current = current[key];\n        } else {\n          isValid = false;\n          break;\n        }\n      }\n      if (isValid && current !== null && current !== undefined) {\n        return current;\n      }\n    }\n    return null;\n  }, []);\n  const normalizePaymentData = useCallback(payment => {\n    console.log('Normalizing payment data:', payment);\n    const normalizedPayment = {\n      payment_date: safeExtract(payment, ['date', 'payment_date', 'payDate', 'created_at', 'transaction_date', 'pay_date']) || new Date().toISOString().split('T')[0],\n      branch_name: safeExtract(payment, ['branch', 'branch_name', 'branchName', 'location', 'branch_location', 'center_name']) || 'N/A',\n      amount: extractPaymentAmount(payment),\n      status: safeExtract(payment, ['status', 'paymentStatus', 'payment_status', 'transaction_status', 'pay_status']) || 'Unknown'\n    };\n    console.log('Normalized payment:', normalizedPayment);\n    return normalizedPayment;\n  }, [extractPaymentAmount, safeExtract]);\n  useEffect(() => {\n    if (isOpen && paymentData) {\n      console.log('PaymentData received:', paymentData);\n      setCourse((paymentData === null || paymentData === void 0 ? void 0 : paymentData.course) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.courseName) || 'Unknown');\n      setGrade(paymentData !== null && paymentData !== void 0 && paymentData.grade ? `grade ${paymentData.grade}` : (paymentData === null || paymentData === void 0 ? void 0 : paymentData.gradeLevel) || 'Unknown');\n      if (paymentData !== null && paymentData !== void 0 && paymentData.student_details_id || paymentData !== null && paymentData !== void 0 && paymentData.student_no) {\n        const studentId = (paymentData === null || paymentData === void 0 ? void 0 : paymentData.student_details_id) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.student_no);\n        console.log('Fetching history for student ID:', studentId);\n        setLoading(true);\n        const fetchPaymentHistory = async () => {\n          try {\n            const response = await axios.get(API_BASE_URL + `/payment-history/${studentId}`);\n            console.log('API Response:', response.data);\n            let fetchedCourse = 'Unknown';\n            let fetchedGrade = 'Unknown';\n            if (response.data && typeof response.data === 'object') {\n              if (response.data.course) fetchedCourse = response.data.course;\n              if (response.data.grade) fetchedGrade = `grade ${response.data.grade}`;\n              if (response.data.courseName) fetchedCourse = response.data.courseName;\n              if (response.data.gradeLevel) fetchedGrade = response.data.gradeLevel;\n              if (response.data.student_details) {\n                if (response.data.student_details.course) fetchedCourse = response.data.student_details.course;\n                if (response.data.student_details.grade) fetchedGrade = `grade ${response.data.student_details.grade}`;\n              }\n            }\n            setCourse(fetchedCourse || response.data.courseName || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.course) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.courseName) || 'Unknown');\n            setGrade(fetchedGrade || response.data.gradeLevel || (paymentData !== null && paymentData !== void 0 && paymentData.grade ? `grade ${paymentData.grade}` : (paymentData === null || paymentData === void 0 ? void 0 : paymentData.gradeLevel) || 'Unknown'));\n            const {\n              paidHistory = [],\n              pendingHistory = []\n            } = response.data;\n            const allHistory = [...paidHistory, ...pendingHistory];\n            const normalizedHistory = allHistory.map(payment => normalizePaymentData(payment));\n\n            // Filter history based on selectedStatus\n            const filteredHistory = normalizedHistory.filter(payment => paymentData.selectedStatus === 'All' || payment.status === paymentData.selectedStatus);\n            const uniqueHistory = filteredHistory.filter((payment, index, self) => index === self.findIndex(p => p.payment_date === payment.payment_date && p.amount === payment.amount && p.status === payment.status && p.branch_name === payment.branch_name)).sort((a, b) => new Date(b.payment_date) - new Date(a.payment_date));\n            if (uniqueHistory.length === 0) {\n              const fallbackPayment = normalizePaymentData(paymentData);\n              setPaymentHistory([fallbackPayment]);\n            } else {\n              setPaymentHistory(uniqueHistory);\n            }\n          } catch (error) {\n            console.error('Error fetching payment history:', error);\n            setCourse((paymentData === null || paymentData === void 0 ? void 0 : paymentData.course) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.courseName) || 'Unknown');\n            setGrade(paymentData !== null && paymentData !== void 0 && paymentData.grade ? `grade ${paymentData.grade}` : (paymentData === null || paymentData === void 0 ? void 0 : paymentData.gradeLevel) || 'Unknown');\n            const fallbackPayment = normalizePaymentData(paymentData);\n            setPaymentHistory([fallbackPayment]);\n          } finally {\n            setLoading(false);\n          }\n        };\n        fetchPaymentHistory();\n      } else {\n        const initialPayment = normalizePaymentData(paymentData);\n        setPaymentHistory([initialPayment]);\n        setLoading(false);\n      }\n    }\n  }, [isOpen, paymentData, normalizePaymentData]);\n  useEffect(() => {\n    let intervalId;\n    if (isOpen && (paymentData !== null && paymentData !== void 0 && paymentData.student_details_id || paymentData !== null && paymentData !== void 0 && paymentData.student_no)) {\n      const studentId = (paymentData === null || paymentData === void 0 ? void 0 : paymentData.student_details_id) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.student_no);\n      intervalId = setInterval(async () => {\n        try {\n          const response = await axios.get(API_BASE_URL + `/payment-history/${studentId}`);\n          console.log('Auto-refresh API Response:', response.data);\n          let fetchedCourse = 'Unknown';\n          let fetchedGrade = 'Unknown';\n          if (response.data && typeof response.data === 'object') {\n            if (response.data.course) fetchedCourse = response.data.course;\n            if (response.data.grade) fetchedGrade = `grade ${response.data.grade}`;\n            if (response.data.courseName) fetchedCourse = response.data.courseName;\n            if (response.data.gradeLevel) fetchedGrade = response.data.gradeLevel;\n            if (response.data.student_details) {\n              if (response.data.student_details.course) fetchedCourse = response.data.student_details.course;\n              if (response.data.student_details.grade) fetchedGrade = `grade ${response.data.student_details.grade}`;\n            }\n          }\n          if (fetchedCourse !== 'Unknown' || response.data.courseName) {\n            setCourse(fetchedCourse || response.data.courseName);\n          }\n          if (fetchedGrade !== 'Unknown' || response.data.gradeLevel) {\n            setGrade(fetchedGrade || response.data.gradeLevel);\n          }\n          const {\n            paidHistory = [],\n            pendingHistory = []\n          } = response.data;\n          const allHistory = [...paidHistory, ...pendingHistory];\n          const normalizedHistory = allHistory.map(payment => normalizePaymentData(payment));\n          const uniqueHistory = normalizedHistory.filter((payment, index, self) => index === self.findIndex(p => p.payment_date === payment.payment_date && p.amount === payment.amount && p.status === payment.status && p.branch_name === payment.branch_name)).sort((a, b) => new Date(b.payment_date) - new Date(a.payment_date));\n          if (uniqueHistory.length > 0) {\n            setPaymentHistory(uniqueHistory);\n          }\n        } catch (error) {\n          console.error('Error refreshing payment history:', error);\n        }\n      }, 30000);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isOpen, paymentData === null || paymentData === void 0 ? void 0 : paymentData.student_details_id, paymentData === null || paymentData === void 0 ? void 0 : paymentData.student_no, normalizePaymentData]);\n  if (!isOpen || !paymentData) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"payment-close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-info-section\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 16\n            }, this), (paymentData === null || paymentData === void 0 ? void 0 : paymentData.full_name) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.fullName) || (paymentData === null || paymentData === void 0 ? void 0 : paymentData.name) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"course-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"course-header-title\",\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"grade-header-title\",\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"course-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"course-name\",\n              children: course\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"course-grade\",\n              children: grade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-history-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"payment-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Branch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Payment(Rs)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: loading ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"4\",\n                  style: {\n                    textAlign: 'center',\n                    padding: '20px'\n                  },\n                  children: \"Loading payment history...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this) : paymentHistory.length > 0 ? paymentHistory.map((payment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: payment.payment_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: payment.branch_name || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: payment.amount > 0 ? payment.amount.toLocaleString('en-US') : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `payment-status ${payment.status.toLowerCase()}`,\n                    children: payment.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)]\n              }, `${payment.payment_date}-${payment.amount}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"4\",\n                  style: {\n                    textAlign: 'center',\n                    padding: '20px'\n                  },\n                  children: \"No payment history found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentDetailsModal, \"3dJIEHmIp21XZLBLjGfqvT3r248=\");\n_c = PaymentDetailsModal;\nexport default PaymentDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"PaymentDetailsModal\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","API_BASE_URL","PaymentDetailsModal","isOpen","onClose","paymentData","_s","paymentHistory","setPaymentHistory","course","setCourse","grade","setGrade","loading","setLoading","extractPaymentAmount","payment","possibleAmountFields","field","undefined","value","numValue","parseFloat","Number","isNaN","safeExtract","obj","paths","path","keys","split","current","isValid","key","normalizePaymentData","console","log","normalizedPayment","payment_date","Date","toISOString","branch_name","amount","status","courseName","gradeLevel","student_details_id","student_no","studentId","fetchPaymentHistory","response","get","data","fetchedCourse","fetchedGrade","student_details","paidHistory","pendingHistory","allHistory","normalizedHistory","map","filteredHistory","filter","selectedStatus","uniqueHistory","index","self","findIndex","p","sort","a","b","length","fallbackPayment","error","initialPayment","intervalId","setInterval","clearInterval","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","full_name","fullName","name","colSpan","style","textAlign","padding","toLocaleString","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SMS Final Final Code K/Frontend/src/sections/payments/models/PaymentDetailsModal.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../Styles/payment/PaymentDetailsModal.css';\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\nconst PaymentDetailsModal = ({ isOpen, onClose, paymentData }) => {\r\n  const [paymentHistory, setPaymentHistory] = useState([]);\r\n  const [course, setCourse] = useState('Unknown');\r\n  const [grade, setGrade] = useState('Unknown');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const extractPaymentAmount = useCallback((payment) => {\r\n    const possibleAmountFields = [\r\n      'payment', 'amount', 'payment_amount', 'paymentAmount', 'total_amount', 'totalAmount',\r\n      'fee_amount', 'feeAmount', 'monthly_fee', 'monthlyFee', 'tuition_fee', 'tuitionFee',\r\n      'course_fee', 'courseFee', 'paid_amount', 'paidAmount'\r\n    ];\r\n\r\n    for (const field of possibleAmountFields) {\r\n      if (payment && payment[field] !== undefined && payment[field] !== null) {\r\n        const value = payment[field];\r\n        const numValue = typeof value === 'string' ? parseFloat(value) : Number(value);\r\n        if (!isNaN(numValue) && numValue > 0) {\r\n          return numValue;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }, []);\r\n\r\n  const safeExtract = useCallback((obj, paths) => {\r\n    if (!obj) return null;\r\n    \r\n    for (const path of paths) {\r\n      const keys = path.split('.');\r\n      let current = obj;\r\n      let isValid = true;\r\n      \r\n      for (const key of keys) {\r\n        if (current && typeof current === 'object' && key in current) {\r\n          current = current[key];\r\n        } else {\r\n          isValid = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (isValid && current !== null && current !== undefined) {\r\n        return current;\r\n      }\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  const normalizePaymentData = useCallback((payment) => {\r\n    console.log('Normalizing payment data:', payment);\r\n    \r\n    const normalizedPayment = {\r\n      payment_date: safeExtract(payment, [\r\n        'date', 'payment_date', 'payDate', 'created_at', 'transaction_date', 'pay_date'\r\n      ]) || new Date().toISOString().split('T')[0],\r\n      \r\n      branch_name: safeExtract(payment, [\r\n        'branch', 'branch_name', 'branchName', 'location', 'branch_location', 'center_name'\r\n      ]) || 'N/A',\r\n      \r\n      amount: extractPaymentAmount(payment),\r\n      \r\n      status: safeExtract(payment, [\r\n        'status', 'paymentStatus', 'payment_status', 'transaction_status', 'pay_status'\r\n      ]) || 'Unknown'\r\n    };\r\n\r\n    console.log('Normalized payment:', normalizedPayment);\r\n    return normalizedPayment;\r\n  }, [extractPaymentAmount, safeExtract]);\r\n\r\nuseEffect(() => {\r\n  if (isOpen && paymentData) {\r\n    console.log('PaymentData received:', paymentData);\r\n\r\n    setCourse(paymentData?.course || paymentData?.courseName || 'Unknown');\r\n    setGrade(paymentData?.grade ? `grade ${paymentData.grade}` : paymentData?.gradeLevel || 'Unknown');\r\n\r\n    if (paymentData?.student_details_id || paymentData?.student_no) {\r\n      const studentId = paymentData?.student_details_id || paymentData?.student_no;\r\n      console.log('Fetching history for student ID:', studentId);\r\n      setLoading(true);\r\n\r\n      const fetchPaymentHistory = async () => {\r\n        try {\r\n          const response = await axios.get(API_BASE_URL + `/payment-history/${studentId}`);\r\n          console.log('API Response:', response.data);\r\n\r\n          let fetchedCourse = 'Unknown';\r\n          let fetchedGrade = 'Unknown';\r\n\r\n          if (response.data && typeof response.data === 'object') {\r\n            if (response.data.course) fetchedCourse = response.data.course;\r\n            if (response.data.grade) fetchedGrade = `grade ${response.data.grade}`;\r\n            if (response.data.courseName) fetchedCourse = response.data.courseName;\r\n            if (response.data.gradeLevel) fetchedGrade = response.data.gradeLevel;\r\n\r\n            if (response.data.student_details) {\r\n              if (response.data.student_details.course) fetchedCourse = response.data.student_details.course;\r\n              if (response.data.student_details.grade) fetchedGrade = `grade ${response.data.student_details.grade}`;\r\n            }\r\n          }\r\n\r\n          setCourse(fetchedCourse || response.data.courseName || paymentData?.course || paymentData?.courseName || 'Unknown');\r\n          setGrade(fetchedGrade || response.data.gradeLevel || (paymentData?.grade ? `grade ${paymentData.grade}` : paymentData?.gradeLevel || 'Unknown'));\r\n\r\n          const { paidHistory = [], pendingHistory = [] } = response.data;\r\n          const allHistory = [...paidHistory, ...pendingHistory];\r\n          const normalizedHistory = allHistory.map(payment => normalizePaymentData(payment));\r\n\r\n          // Filter history based on selectedStatus\r\n          const filteredHistory = normalizedHistory.filter(payment => \r\n            paymentData.selectedStatus === 'All' || payment.status === paymentData.selectedStatus\r\n          );\r\n\r\n          const uniqueHistory = filteredHistory.filter((payment, index, self) => \r\n            index === self.findIndex(p => \r\n              p.payment_date === payment.payment_date && \r\n              p.amount === payment.amount &&\r\n              p.status === payment.status &&\r\n              p.branch_name === payment.branch_name\r\n            )\r\n          ).sort((a, b) => new Date(b.payment_date) - new Date(a.payment_date));\r\n\r\n          if (uniqueHistory.length === 0) {\r\n            const fallbackPayment = normalizePaymentData(paymentData);\r\n            setPaymentHistory([fallbackPayment]);\r\n          } else {\r\n            setPaymentHistory(uniqueHistory);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching payment history:', error);\r\n          setCourse(paymentData?.course || paymentData?.courseName || 'Unknown');\r\n          setGrade(paymentData?.grade ? `grade ${paymentData.grade}` : paymentData?.gradeLevel || 'Unknown');\r\n          const fallbackPayment = normalizePaymentData(paymentData);\r\n          setPaymentHistory([fallbackPayment]);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchPaymentHistory();\r\n    } else {\r\n      const initialPayment = normalizePaymentData(paymentData);\r\n      setPaymentHistory([initialPayment]);\r\n      setLoading(false);\r\n    }\r\n  }\r\n}, [isOpen, paymentData, normalizePaymentData]);\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    \r\n    if (isOpen && (paymentData?.student_details_id || paymentData?.student_no)) {\r\n      const studentId = paymentData?.student_details_id || paymentData?.student_no;\r\n      \r\n      intervalId = setInterval(async () => {\r\n        try {\r\n          const response = await axios.get(API_BASE_URL +`/payment-history/${studentId}`);\r\n          console.log('Auto-refresh API Response:', response.data);\r\n          \r\n          let fetchedCourse = 'Unknown';\r\n          let fetchedGrade = 'Unknown';\r\n          \r\n          if (response.data && typeof response.data === 'object') {\r\n            if (response.data.course) fetchedCourse = response.data.course;\r\n            if (response.data.grade) fetchedGrade = `grade ${response.data.grade}`;\r\n            if (response.data.courseName) fetchedCourse = response.data.courseName;\r\n            if (response.data.gradeLevel) fetchedGrade = response.data.gradeLevel;\r\n            \r\n            if (response.data.student_details) {\r\n              if (response.data.student_details.course) fetchedCourse = response.data.student_details.course;\r\n              if (response.data.student_details.grade) fetchedGrade = `grade ${response.data.student_details.grade}`;\r\n            }\r\n          }\r\n          \r\n          if (fetchedCourse !== 'Unknown' || response.data.courseName) {\r\n            setCourse(fetchedCourse || response.data.courseName);\r\n          }\r\n          if (fetchedGrade !== 'Unknown' || response.data.gradeLevel) {\r\n            setGrade(fetchedGrade || response.data.gradeLevel);\r\n          }\r\n          \r\n          const { paidHistory = [], pendingHistory = [] } = response.data;\r\n          const allHistory = [...paidHistory, ...pendingHistory];\r\n          const normalizedHistory = allHistory.map(payment => normalizePaymentData(payment));\r\n          \r\n          const uniqueHistory = normalizedHistory.filter((payment, index, self) => \r\n            index === self.findIndex(p => \r\n              p.payment_date === payment.payment_date && \r\n              p.amount === payment.amount &&\r\n              p.status === payment.status &&\r\n              p.branch_name === payment.branch_name\r\n            )\r\n          ).sort((a, b) => new Date(b.payment_date) - new Date(a.payment_date));\r\n          \r\n          if (uniqueHistory.length > 0) {\r\n            setPaymentHistory(uniqueHistory);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error refreshing payment history:', error);\r\n        }\r\n      }, 30000);\r\n    }\r\n    \r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [isOpen, paymentData?.student_details_id, paymentData?.student_no, normalizePaymentData]);\r\n\r\n  if (!isOpen || !paymentData) return null;\r\n\r\n  return (\r\n    <div className=\"payment-modal-overlay\" onClick={onClose}>\r\n      <div className=\"payment-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"payment-modal-header\">\r\n          <h2>Payment Details</h2>\r\n          <button className=\"payment-close-button\" onClick={onClose}>\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"payment-modal-body\">\r\n          <div className=\"student-info-section\">\r\n            <p><strong>Name : </strong>{paymentData?.full_name || paymentData?.fullName || paymentData?.name || 'N/A'}</p>\r\n          </div>\r\n\r\n           <div className=\"course-info-section\">\r\n            <div className=\"course-header\">\r\n              <span className=\"course-header-title\">Course</span>\r\n              <span className=\"grade-header-title\">Grade</span>\r\n            </div>\r\n            <div className=\"course-row\">\r\n              <span className=\"course-name\">{course}</span>\r\n              <span className=\"course-grade\">{grade}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"payment-history-section\">\r\n            <div className=\"payment-history-header\">\r\n              <h3>Payment History</h3>\r\n            </div>\r\n            <table className=\"payment-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Branch</th>\r\n                  <th>Payment(Rs)</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {loading ? (\r\n                  <tr>\r\n                    <td colSpan=\"4\" style={{ textAlign: 'center', padding: '20px' }}>\r\n                      Loading payment history...\r\n                    </td>\r\n                  </tr>\r\n                ) : paymentHistory.length > 0 ? (\r\n                  paymentHistory.map((payment, index) => (\r\n                    <tr key={`${payment.payment_date}-${payment.amount}-${index}`}>\r\n                      <td>{payment.payment_date}</td>\r\n                      <td>{payment.branch_name || 'N/A'}</td>\r\n                      <td>{payment.amount > 0 ? payment.amount.toLocaleString('en-US') : 'N/A'}</td>\r\n                      <td>\r\n                        <span className={`payment-status ${payment.status.toLowerCase()}`}>\r\n                          {payment.status}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"4\" style={{ textAlign: 'center', padding: '20px' }}>\r\n                      No payment history found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentDetailsModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
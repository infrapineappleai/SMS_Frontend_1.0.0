{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SMS Final Final Code K\\\\Frontend\\\\src\\\\sections\\\\students\\\\StudentFormStepper\\\\Step4AcademicDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../../Styles/Students-css/StudentFormStepper/Step4AcademicDetails.css';\nimport FilterIcon from '../../../assets/icons/Filter.png';\nimport { useToast } from '../../../modals/ToastProvider';\nimport { getDropdownOptions } from '../../../integration/studentAPI';\nimport EditIcon from '../../../assets/icons/Edit.png';\nimport DeleteIcon from '../../../assets/icons/Delete.png';\nimport successToastIcon from '../../../assets/icons/Success.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step4AcademicDetails = ({\n  formData,\n  onChange,\n  errors\n}) => {\n  _s();\n  var _formData$schedules;\n  const {\n    showToast\n  } = useToast();\n\n  // Remove student_no from local state\n  const [scheduleInput, setScheduleInput] = useState({\n    branch: formData.branch || '',\n    schedule_day: formData.schedule_day || '',\n    schedule_time: formData.schedule_time || ''\n  });\n  const [dropdownOptions, setDropdownOptions] = useState({\n    branches: [],\n    slots: []\n  });\n  const [loadingBranches, setLoadingBranches] = useState(false);\n  const [loadingSlots, setLoadingSlots] = useState(false);\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        setLoadingBranches(true);\n        const branches = await getDropdownOptions('branches');\n        setDropdownOptions(prev => ({\n          ...prev,\n          branches: Array.isArray(branches) ? branches : []\n        }));\n        if (!branches.length) {\n          showToast({\n            title: 'Warning',\n            message: 'No branches available.',\n            isError: true\n          });\n        }\n      } catch (error) {\n        showToast({\n          title: 'Error',\n          message: `Failed to load branches: ${error.message || 'Unknown error'}`,\n          isError: true\n        });\n      } finally {\n        setLoadingBranches(false);\n      }\n    };\n    fetchBranches();\n  }, [showToast]);\n  useEffect(() => {\n    const fetchSlots = async () => {\n      try {\n        setLoadingSlots(true);\n        const selectedBranch = dropdownOptions.branches.find(b => b.branch_name === scheduleInput.branch);\n        if (!selectedBranch || !formData.course || !formData.grade) {\n          return;\n        }\n        const params = {\n          branchId: selectedBranch.id,\n          courseId: formData.course,\n          gradeId: formData.grade\n        };\n        const slots = await getDropdownOptions('slots', params);\n        setDropdownOptions(prev => ({\n          ...prev,\n          slots: Array.isArray(slots) ? slots : []\n        }));\n        if (!slots.length) {\n          showToast({\n            title: 'Warning',\n            message: 'No available slots for selected branch, course, and grade.',\n            isError: true\n          });\n        }\n      } catch (error) {\n        showToast({\n          title: 'Error',\n          message: `Failed to load slots: ${error.message || 'Unknown error'}`,\n          isError: true\n        });\n      } finally {\n        setLoadingSlots(false);\n      }\n    };\n    fetchSlots();\n  }, [scheduleInput.branch, dropdownOptions.branches, formData.course, formData.grade, showToast]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'student_no') {\n      // Directly update formData for student_no (no local state)\n      onChange({\n        ...formData,\n        student_no: value\n      });\n    } else {\n      // For branch, schedule_day, schedule_time - update local state and propagate to formData\n      setScheduleInput(prev => {\n        const updated = {\n          ...prev,\n          [name]: value\n        };\n        if (name === 'branch' || name === 'schedule_day') {\n          updated.schedule_time = '';\n        }\n        return updated;\n      });\n      onChange({\n        ...formData,\n        [name]: value,\n        schedule_time: name === 'branch' || name === 'schedule_day' ? '' : formData.schedule_time\n      });\n    }\n  };\n  const handleAssign = e => {\n    e.preventDefault();\n    const {\n      branch,\n      schedule_day,\n      schedule_time\n    } = scheduleInput;\n    const {\n      student_no\n    } = formData; // get student_no from formData now\n\n    if (!branch || !student_no || !schedule_day || !schedule_time) {\n      showToast({\n        title: 'Error',\n        message: 'Branch, Student ID, Schedule Day, and Schedule Time are required',\n        isError: true\n      });\n      return;\n    }\n    const selectedSlot = filteredSlots.find(slot => slot.day === schedule_day && slot.time === schedule_time);\n    if (!selectedSlot) {\n      showToast({\n        title: 'Error',\n        message: 'Invalid slot selected',\n        isError: true\n      });\n      return;\n    }\n    onChange({\n      ...formData,\n      branch,\n      schedule_day,\n      schedule_time,\n      schedules: [...(formData.schedules || []), {\n        id: selectedSlot.id,\n        branch,\n        studentId: student_no,\n        day: schedule_day,\n        time: schedule_time,\n        course: formData.course || '',\n        grade: formData.grade || ''\n      }]\n    });\n    showToast({\n      title: 'Success',\n      message: 'Schedule assigned successfully!',\n      icon: successToastIcon\n    });\n    setScheduleInput(prev => ({\n      ...prev,\n      schedule_day: '',\n      schedule_time: ''\n    }));\n  };\n  const handleEditCourse = id => {\n    const existing = formData.schedules.find(s => s.id === id);\n    if (existing) {\n      setScheduleInput({\n        branch: existing.branch,\n        schedule_day: existing.day,\n        schedule_time: existing.time\n      });\n      const updated = formData.schedules.filter(s => s.id !== id);\n      onChange({\n        ...formData,\n        schedules: updated\n      });\n    }\n  };\n  const handleDeleteCourse = id => {\n    const updated = formData.schedules.filter(s => s.id !== id);\n    onChange({\n      ...formData,\n      schedules: updated\n    });\n    showToast({\n      title: 'Deleted',\n      message: 'Schedule deleted successfully!',\n      isError: false,\n      icon: successToastIcon\n    });\n  };\n  const availableDays = [...new Set(dropdownOptions.slots.filter(slot => {\n    const selectedBranch = dropdownOptions.branches.find(b => b.branch_name === scheduleInput.branch);\n    return selectedBranch ? String(slot.branch_id) === String(selectedBranch.id) : false;\n  }).map(slot => slot.day))].sort();\n  const filteredSlots = dropdownOptions.slots.filter(slot => {\n    const selectedBranch = dropdownOptions.branches.find(b => b.branch_name === scheduleInput.branch);\n    const matchesBranch = selectedBranch ? String(slot.branch_id) === String(selectedBranch.id) : false;\n    const matchesDay = scheduleInput.schedule_day ? slot.day === scheduleInput.schedule_day : true;\n    return matchesBranch && matchesDay && slot.time && slot.day;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-four-fields\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-header\",\n      children: \"Academic Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-icon-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"branch\",\n            className: \"input-box with-icon\",\n            value: scheduleInput.branch,\n            onChange: handleInputChange,\n            disabled: loadingBranches,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), dropdownOptions.branches.map(branch => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: branch.branch_name,\n              children: branch.branch_name\n            }, branch.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: FilterIcon,\n            alt: \"dropdown\",\n            className: \"input-icon dropdown-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), errors.branch && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Student ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"student_no\",\n          type: \"text\",\n          className: \"input-box\",\n          value: formData.student_no,\n          placeholder: \"e.g. ST-001\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), errors.student_no && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.student_no\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Schedule Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-icon-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"schedule_day\",\n            className: \"input-box with-icon\",\n            value: scheduleInput.schedule_day,\n            onChange: handleInputChange,\n            disabled: loadingSlots,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), availableDays.length > 0 ? availableDays.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: day,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"No available days for selected branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: FilterIcon,\n            alt: \"dropdown\",\n            className: \"input-icon dropdown-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), errors.schedule_day && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.schedule_day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"Schedule Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-icon-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"schedule_time\",\n            className: \"input-box with-icon\",\n            value: scheduleInput.schedule_time,\n            onChange: handleInputChange,\n            disabled: loadingSlots || !scheduleInput.schedule_day,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), filteredSlots.length > 0 ? filteredSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: slot.time,\n              children: slot.time\n            }, slot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"No slots available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: FilterIcon,\n            alt: \"dropdown\",\n            className: \"input-icon dropdown-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), errors.schedule_time && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.schedule_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"assign-btn\",\n      onClick: handleAssign,\n      disabled: !scheduleInput.branch || !formData.student_no || !scheduleInput.schedule_day || !scheduleInput.schedule_time,\n      children: \"Assign Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), errors.schedules && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: errors.schedules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 28\n    }, this), ((_formData$schedules = formData.schedules) === null || _formData$schedules === void 0 ? void 0 : _formData$schedules.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assigned-table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"assigned-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: formData.schedules.map(({\n            id,\n            branch,\n            studentId,\n            day,\n            time\n          }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: branch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: studentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: EditIcon,\n                alt: \"Edit\",\n                className: \"icon-btn edit-icon\",\n                onClick: () => handleEditCourse(id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: DeleteIcon,\n                alt: \"Delete\",\n                className: \"icon-btn delete-icon\",\n                onClick: () => handleDeleteCourse(id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: \"No schedules assigned.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(Step4AcademicDetails, \"AYOtOA3nIHr0fux7LWaLeK6M6ug=\", false, function () {\n  return [useToast];\n});\n_c = Step4AcademicDetails;\nexport default Step4AcademicDetails;\nvar _c;\n$RefreshReg$(_c, \"Step4AcademicDetails\");","map":{"version":3,"names":["React","useState","useEffect","FilterIcon","useToast","getDropdownOptions","EditIcon","DeleteIcon","successToastIcon","jsxDEV","_jsxDEV","Step4AcademicDetails","formData","onChange","errors","_s","_formData$schedules","showToast","scheduleInput","setScheduleInput","branch","schedule_day","schedule_time","dropdownOptions","setDropdownOptions","branches","slots","loadingBranches","setLoadingBranches","loadingSlots","setLoadingSlots","fetchBranches","prev","Array","isArray","length","title","message","isError","error","fetchSlots","selectedBranch","find","b","branch_name","course","grade","params","branchId","id","courseId","gradeId","handleInputChange","e","name","value","target","student_no","updated","handleAssign","preventDefault","selectedSlot","filteredSlots","slot","day","time","schedules","studentId","icon","handleEditCourse","existing","s","filter","handleDeleteCourse","availableDays","Set","String","branch_id","map","sort","matchesBranch","matchesDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","src","alt","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SMS Final Final Code K/Frontend/src/sections/students/StudentFormStepper/Step4AcademicDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../../Styles/Students-css/StudentFormStepper/Step4AcademicDetails.css';\r\nimport FilterIcon from '../../../assets/icons/Filter.png';\r\nimport { useToast } from '../../../modals/ToastProvider';\r\nimport { getDropdownOptions } from '../../../integration/studentAPI';\r\nimport EditIcon from '../../../assets/icons/Edit.png';\r\nimport DeleteIcon from '../../../assets/icons/Delete.png';\r\nimport successToastIcon from '../../../assets/icons/Success.png';\r\n\r\nconst Step4AcademicDetails = ({ formData, onChange, errors }) => {\r\n  const { showToast } = useToast();\r\n\r\n  // Remove student_no from local state\r\n  const [scheduleInput, setScheduleInput] = useState({\r\n    branch: formData.branch || '',\r\n    schedule_day: formData.schedule_day || '',\r\n    schedule_time: formData.schedule_time || '',\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({ branches: [], slots: [] });\r\n  const [loadingBranches, setLoadingBranches] = useState(false);\r\n  const [loadingSlots, setLoadingSlots] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchBranches = async () => {\r\n      try {\r\n        setLoadingBranches(true);\r\n        const branches = await getDropdownOptions('branches');\r\n        setDropdownOptions((prev) => ({ ...prev, branches: Array.isArray(branches) ? branches : [] }));\r\n        if (!branches.length) {\r\n          showToast({ title: 'Warning', message: 'No branches available.', isError: true });\r\n        }\r\n      } catch (error) {\r\n        showToast({ title: 'Error', message: `Failed to load branches: ${error.message || 'Unknown error'}`, isError: true });\r\n      } finally {\r\n        setLoadingBranches(false);\r\n      }\r\n    };\r\n    fetchBranches();\r\n  }, [showToast]);\r\n\r\n  useEffect(() => {\r\n    const fetchSlots = async () => {\r\n      try {\r\n        setLoadingSlots(true);\r\n\r\n        const selectedBranch = dropdownOptions.branches.find((b) => b.branch_name === scheduleInput.branch);\r\n\r\n        if (!selectedBranch || !formData.course || !formData.grade) {\r\n          return;\r\n        }\r\n\r\n        const params = {\r\n          branchId: selectedBranch.id,\r\n          courseId: formData.course,\r\n          gradeId: formData.grade,\r\n        };\r\n\r\n        const slots = await getDropdownOptions('slots', params);\r\n        setDropdownOptions((prev) => ({ ...prev, slots: Array.isArray(slots) ? slots : [] }));\r\n\r\n        if (!slots.length) {\r\n          showToast({\r\n            title: 'Warning',\r\n            message: 'No available slots for selected branch, course, and grade.',\r\n            isError: true,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        showToast({ title: 'Error', message: `Failed to load slots: ${error.message || 'Unknown error'}`, isError: true });\r\n      } finally {\r\n        setLoadingSlots(false);\r\n      }\r\n    };\r\n    fetchSlots();\r\n  }, [scheduleInput.branch, dropdownOptions.branches, formData.course, formData.grade, showToast]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'student_no') {\r\n      // Directly update formData for student_no (no local state)\r\n      onChange({ ...formData, student_no: value });\r\n    } else {\r\n      // For branch, schedule_day, schedule_time - update local state and propagate to formData\r\n      setScheduleInput((prev) => {\r\n        const updated = { ...prev, [name]: value };\r\n        if (name === 'branch' || name === 'schedule_day') {\r\n          updated.schedule_time = '';\r\n        }\r\n        return updated;\r\n      });\r\n      onChange({\r\n        ...formData,\r\n        [name]: value,\r\n        schedule_time: (name === 'branch' || name === 'schedule_day') ? '' : formData.schedule_time,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAssign = (e) => {\r\n    e.preventDefault();\r\n    const { branch, schedule_day, schedule_time } = scheduleInput;\r\n    const { student_no } = formData; // get student_no from formData now\r\n\r\n    if (!branch || !student_no || !schedule_day || !schedule_time) {\r\n      showToast({ title: 'Error', message: 'Branch, Student ID, Schedule Day, and Schedule Time are required', isError: true });\r\n      return;\r\n    }\r\n    const selectedSlot = filteredSlots.find((slot) => slot.day === schedule_day && slot.time === schedule_time);\r\n    if (!selectedSlot) {\r\n      showToast({ title: 'Error', message: 'Invalid slot selected', isError: true });\r\n      return;\r\n    }\r\n    onChange({\r\n      ...formData,\r\n      branch,\r\n      schedule_day,\r\n      schedule_time,\r\n      schedules: [...(formData.schedules || []), {\r\n        id: selectedSlot.id,\r\n        branch,\r\n        studentId: student_no,\r\n        day: schedule_day,\r\n        time: schedule_time,\r\n        course: formData.course || '',\r\n        grade: formData.grade || '',\r\n      }],\r\n    });\r\n    showToast({ title: 'Success', message: 'Schedule assigned successfully!',icon: successToastIcon });\r\n    setScheduleInput((prev) => ({ ...prev, schedule_day: '', schedule_time: '' }));\r\n  };\r\n\r\n  const handleEditCourse = (id) => {\r\n    const existing = formData.schedules.find((s) => s.id === id);\r\n    if (existing) {\r\n      setScheduleInput({\r\n        branch: existing.branch,\r\n        schedule_day: existing.day,\r\n        schedule_time: existing.time,\r\n      });\r\n      const updated = formData.schedules.filter((s) => s.id !== id);\r\n      onChange({\r\n        ...formData,\r\n        schedules: updated,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteCourse = (id) => {\r\n    const updated = formData.schedules.filter((s) => s.id !== id);\r\n    onChange({\r\n      ...formData,\r\n      schedules: updated,\r\n    });\r\n    showToast({ title: 'Deleted', message: 'Schedule deleted successfully!', isError: false,icon: successToastIcon });\r\n  };\r\n\r\n  const availableDays = [...new Set(\r\n    dropdownOptions.slots\r\n      .filter((slot) => {\r\n        const selectedBranch = dropdownOptions.branches.find((b) => b.branch_name === scheduleInput.branch);\r\n        return selectedBranch ? String(slot.branch_id) === String(selectedBranch.id) : false;\r\n      })\r\n      .map((slot) => slot.day),\r\n  )].sort();\r\n\r\n  const filteredSlots = dropdownOptions.slots.filter((slot) => {\r\n    const selectedBranch = dropdownOptions.branches.find((b) => b.branch_name === scheduleInput.branch);\r\n    const matchesBranch = selectedBranch ? String(slot.branch_id) === String(selectedBranch.id) : false;\r\n    const matchesDay = scheduleInput.schedule_day ? slot.day === scheduleInput.schedule_day : true;\r\n    return matchesBranch && matchesDay && slot.time && slot.day;\r\n  });\r\n\r\n  return (\r\n    <div className=\"step-four-fields\">\r\n      <h3 className=\"section-header\">Academic Details</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label className=\"input-label\">Branch</label>\r\n          <div className=\"input-icon-container\">\r\n            <select\r\n              name=\"branch\"\r\n              className=\"input-box with-icon\"\r\n              value={scheduleInput.branch}\r\n              onChange={handleInputChange}\r\n              disabled={loadingBranches}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {dropdownOptions.branches.map((branch) => (\r\n                <option key={branch.id} value={branch.branch_name}>{branch.branch_name}</option>\r\n              ))}\r\n            </select>\r\n            <img src={FilterIcon} alt=\"dropdown\" className=\"input-icon dropdown-icon\" />\r\n          </div>\r\n          {errors.branch && <span className=\"error\">{errors.branch}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"input-label\">Student ID</label>\r\n          <input\r\n            name=\"student_no\"\r\n            type=\"text\"\r\n            className=\"input-box\"\r\n            value={formData.student_no}\r\n            placeholder=\"e.g. ST-001\"\r\n            onChange={handleInputChange}\r\n          />\r\n          {errors.student_no && <span className=\"error\">{errors.student_no}</span>}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label className=\"input-label\">Schedule Day</label>\r\n          <div className=\"input-icon-container\">\r\n            <select\r\n              name=\"schedule_day\"\r\n              className=\"input-box with-icon\"\r\n              value={scheduleInput.schedule_day}\r\n              onChange={handleInputChange}\r\n              disabled={loadingSlots}\r\n            >\r\n              <option value=\"\">Select Day</option>\r\n              {availableDays.length > 0 ? (\r\n                availableDays.map((day) => (\r\n                  <option key={day} value={day}>{day}</option>\r\n                ))\r\n              ) : (\r\n                <option value=\"\" disabled>No available days for selected branch</option>\r\n              )}\r\n            </select>\r\n            <img src={FilterIcon} alt=\"dropdown\" className=\"input-icon dropdown-icon\" />\r\n          </div>\r\n          {errors.schedule_day && <span className=\"error\">{errors.schedule_day}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"input-label\">Schedule Time</label>\r\n          <div className=\"input-icon-container\">\r\n            <select\r\n              name=\"schedule_time\"\r\n              className=\"input-box with-icon\"\r\n              value={scheduleInput.schedule_time}\r\n              onChange={handleInputChange}\r\n              disabled={loadingSlots || !scheduleInput.schedule_day}\r\n            >\r\n              <option value=\"\">Select Time</option>\r\n              {filteredSlots.length > 0 ? (\r\n                filteredSlots.map((slot) => (\r\n                  <option key={slot.id} value={slot.time}>{slot.time}</option>\r\n                ))\r\n              ) : (\r\n                <option value=\"\" disabled>No slots available</option>\r\n              )}\r\n            </select>\r\n            <img src={FilterIcon} alt=\"dropdown\" className=\"input-icon dropdown-icon\" />\r\n          </div>\r\n          {errors.schedule_time && <span className=\"error\">{errors.schedule_time}</span>}\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"assign-btn\"\r\n        onClick={handleAssign}\r\n        disabled={!scheduleInput.branch || !formData.student_no || !scheduleInput.schedule_day || !scheduleInput.schedule_time}\r\n      >\r\n        Assign Schedule\r\n      </button>\r\n      {errors.schedules && <p className=\"error-msg\">{errors.schedules}</p>}\r\n      {formData.schedules?.length > 0 ? (\r\n        <div className=\"assigned-table-wrapper\">\r\n          <table className=\"assigned-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Branch</th>\r\n                <th>Student ID</th>\r\n                <th>Day</th>\r\n                <th>Time</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {formData.schedules.map(({ id, branch, studentId, day, time }) => (\r\n                <tr key={id}>\r\n                  <td>{branch}</td>\r\n                  <td>{studentId}</td>\r\n                  <td>{day}</td>\r\n                  <td>{time}</td>\r\n                  <td>\r\n                    <img\r\n                      src={EditIcon}\r\n                      alt=\"Edit\"\r\n                      className=\"icon-btn edit-icon\"\r\n                      onClick={() => handleEditCourse(id)}\r\n                    />\r\n                    <img\r\n                      src={DeleteIcon}\r\n                      alt=\"Delete\"\r\n                      className=\"icon-btn delete-icon\"\r\n                      onClick={() => handleDeleteCourse(id)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p className=\"error-msg\">No schedules assigned.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step4AcademicDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}